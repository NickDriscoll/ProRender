Handle window resizing
Look into VK_KHR_display for fullscreen display

Super short guide to smooth swapchain resizing
1. Use old_swapchain when creating a new swapchain
2. Never resize in the drawing thread, only call resize in the  OS 'resize callback/event'
3. In the OS 'resize callback/event', repaint the scene.
4. Never delete resources (images, views, framebuffers) in the resize. Instead put it in a delayed-deletion-queue. This will delete it when its no longer being used in a couple of frames
5. Use dynamic viewport/scissor, use imageless framebuffer, and re-record command buffers every frame
6. If the items in 4 and 5 are implemented, the resize function will not need to call vkDeviceWaitIdle()
You put the swapchain resize in your "os callback to tell me that the window size has changed"
-CharlesG - LunarG

C++ for VSCode is shit:
    Rename symbol is slow and doesn't fully work sometimes







Submitted access info (
submitted_usage: SYNC_IMAGE_LAYOUT_TRANSITION,
command: vkCmdPipelineBarrier2KHR,
seq_no: 21,
VkImage 0x210d07000000003a[],
VkImage 0x210d07000000003a[],
reset_no: 1
)

Access info (
prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION,
write_barriers: SYNC_HOST_HOST_READ|SYNC_HOST_HOST_WRITE|SYNC_ACCELERATION_STRUCTURE_COPY_ACCELERATION_STRUCTURE_READ|SYNC_ACCELERATION_STRUCTURE_COPY_ACCELERATION_STRUCTURE_WRITE|SYNC_ACCELERATION_STRUCTURE_COPY_TRANSFER_READ|SYNC_ACCELERATION_STRUCTURE_COPY_TRANSFER_WRITE|SYNC_OPTICAL_FLOW_NV_OPTICAL_FLOW_READ_NV|SYNC_OPTICAL_FLOW_NV_OPTICAL_FLOW_WRITE_NV|SYNC_COPY_TRANSFER_READ|SYNC_COPY_TRANSFER_WRITE|SYNC_RESOLVE_TRANSFER_READ|SYNC_RESOLVE_TRANSFER_WRITE|SYNC_BLIT_TRANSFER_READ|SYNC_BLIT_TRANSFER_WRITE|SYNC_CLEAR_TRANSFER_WRITE|SYNC_IMAGE_LAYOUT_TRANSITION,
queue: VkQueue 0x264fde4b830[],
submit: 1,
batch: 0,
batch_tag: 5,
command: vkCmdPipelineBarrier2KHR,
command_buffer: VkCommandBuffer 0x264fe395a90[],
seq_no: 3,
VkImage 0x210d07000000003a[],
VkImage 0x210d07000000003a[],
reset_no: 1
)